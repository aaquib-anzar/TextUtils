{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleStyle","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","split","length","Alert","alert","word","lower","charAt","slice","capitalize","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c5e5d7ff.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import {Link} from \"react-router-dom\";\n\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n          </li>\n          {/* <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n          </li> */}\n\n \n        </ul>\n        {/* <form className=\"d-flex\" role=\"search\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form> */}\n        <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\n            <input className=\"form-check-input\" onClick = {props.toggleStyle}type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n        </div>\n      </div>\n    </div>\n  </nav>\n  )\n}\nNavbar.propTypes = {title : PropTypes.string.isRequired,\n                    aboutText : PropTypes.string.isRequired}\n\nNavbar.defaultProps = {title : \"Set Title here\",\n                       aboutText : \"Set Text here\"}\n","import React , {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted To UpperCase\",\"success\");\n    }\n    const handleLowClick = ()=>{\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted To LowerCase\",\"success\");\n    }\n    const handleClearClick = ()=>{\n        let newText = '';\n        setText(newText);\n    }\n    const handleSpeak = () => {\n        let msg = new SpeechSynthesisUtterance();\n        msg.text = text;\n        window.speechSynthesis.speak(msg);\n      }\n    const handleOnChange = (event)=>{\n        console.log(\"onChange\");\n        setText(event.target.value);\n    }\n\n    const[text,setText] = useState(\"\");//state\n    return (\n    <>\n    <div className = \"container\" style = {{color:props.mode ==='dark'?'white':'black'}}>\n    <h1>{props.heading}</h1>\n    <div className=\"mb-3\">\n       <textarea className=\"form-control\" value = {text} onChange = {handleOnChange} id=\"MyBox\" rows=\"8\" style = {{backgroundColor:props.mode ==='dark'?'grey':'white',color:props.mode ==='dark'?'white':'black'}}></textarea>\n    </div>\n       <button className=\"btn btn-primary mx-2\" onClick = {handleUpClick}>Convert to Uppercase</button>\n       <button className=\"btn btn-primary mx-2\" onClick = {handleLowClick}>Convert to Lowercase</button>\n       <button className=\"btn btn-primary mx-2\" onClick = {handleClearClick}>Clear Text</button>\n       <button className=\"btn btn-primary mx-2\" onClick = {handleSpeak}>Speak</button>\n    </div>\n    <div className = \"container my-3\" style = {{color:props.mode ==='dark'?'white':'black'}}>\n        <h2>Your Text Summary</h2>\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\n        <p>{0.008*text.split(\" \").length} Minutes Read</p>\n        <h2>Preview</h2>\n        <p>{text.length>0?text:\"Enter the Text to preview\"}</p>\n    </div>\n    </>\n\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    const capitalize = (word) =>{\n        const lower = word.toLowerCase()\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\n    }\n  return (\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n       \n    </div>\n  )\n}\n","\nimport './App.css';\nimport React, { useState } from 'react';\n\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const[mode,setMode] = useState(\"light\")\n\n  const[alert,setAlert] = useState(null)\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout (() =>{\n      setAlert(null);\n    },3000)\n  }\n  \n  const toggleStyle = () =>{\n    if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark Mode has been Enabled\",\"success\");\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been Enabled\",\"success\");\n    }\n  }\n  \n  return (\n  <>\n  {/* <Router> */}\n  <Navbar title = \"TextUtils\" aboutText = \"About\" mode = {mode} toggleStyle = {toggleStyle} />\n  <Alert alert = {alert}/>\n  <div className=\"container my-3\">\n    {/* <Routes>\n      <Route exact path=\"/About\" element = {<About/>}/> */}\n      {/* <Route exact path=\"/\" element = {<TextForm heading = \"Enter the text to Analyse\" mode = {mode} showAlert = {showAlert}/>}/> */}\n      <TextForm heading = \"Enter the text to Analyse\" mode = {mode} showAlert = {showAlert}/>\n    {/* </div>/</Routes> */}\n  </div> \n  {/* </Router> */}\n  {/* <About/> */}\n  \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}